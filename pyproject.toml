[tool.poetry]
name = "actigraphy"
version = "0.1.0"
description = "A beautiful description."
authors = ["Reinder Vos de Wael <reinder.vosdewael@childmind.org>"]
license = "LGPL-2.1"
readme = "README.md"
packages = [{include = "actigraphy", from = "src"}]

[tool.poetry.dependencies]
python = "~3.11"
dash-bootstrap-components = "^1.4.2"
dash-daq = "^0.5.0"
numpy = "^1.26.4"
pandas = "^2.2.0"
plotly = "^5.16.1"
rdata = "^0.10"
pydantic = "^2.6.1"
dash = "^2.15.0"
sqlalchemy = "^2.0.26"
pydantic-settings = "^2.1.0"
polars = "^0.20.7"
pyarrow = "^15.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.2"
mypy = "^1.8.0"
pre-commit = "^3.6.2"
pytest-cov = "^4.1.0"
ruff = "^0.2.2"
pytest-mock = "^3.12.0"
vulture = "^2.11"

[tool.poetry.group.docs.dependencies]
pdoc = "^14.4.0"

[tool.poetry.extras]
docs = ["pdoc"]

[tool.poetry.scripts]
actigraphy = "actigraphy.__main__:main_entrypoint"
actigraphy_preprocess = 'actigraphy.__main__:preprocess_entrypoint'

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = [
  "src"
]

[tool.mypy]
ignore_missing_imports = true
strict = true
plugins =[
  "pydantic.mypy"
]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
line-length = 88
indent-width = 4
src=["src"]

target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "ANN101", # Self should never be type annotated.
  "ANN102", # cls should never be type annotated.
  "PTH", # Dash cannot store Path objects.
  "DTZ", # Timezones handling is not consistent.
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"tests/**/*.py" = [
    "S101", # Allow assets
    "ARG", # Unused arguments are common in tests (fixtures).
    "FBT", #Allow positional booleans
    "SLF001", # Allow private member access.
    "INP001", # No need for namespace packages in tests.
]
